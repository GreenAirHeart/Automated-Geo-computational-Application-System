# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:/QT/application_setting.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
from PyQt5.QtCore import QTimer
from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtWebEngineWidgets import *
from algorithm_model import *
import time
class Ui_processing_page(object):
    calculation_finished = QtCore.pyqtSignal()

    def setupUi(self, Dialog):
        Dialog.setObjectName("Automatic Geomorphological Classification Tool")
        Dialog.setWindowIcon(QIcon("dde.ico"))
        Dialog.resize(2000, 1400)
        Dialog.setWindowFlag(Qt.WindowMinimizeButtonHint)
        # whole page
        self.textBrowser = QtWidgets.QTextBrowser(Dialog)
        self.textBrowser.setGeometry(QtCore.QRect(0, 0, 1020, 1400))
        self.textBrowser.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.textBrowser.setObjectName("textBrowser")


        #introduction part
        self.textBrowser_2 = QtWidgets.QTextBrowser(Dialog)
        self.textBrowser_2.setGeometry(QtCore.QRect(1020, 0, 980, 1400))
        self.textBrowser_2.setObjectName("textBrowser_2")

        self.label_8 = QtWidgets.QLabel(Dialog)
        self.label_8.setGeometry(QtCore.QRect(1020, 55, 421, 51))
        self.label_8.setStyleSheet("font: 75 18pt \"Agency FB\";\n""color: rgb(0, 0, 0);\n""\n""")
        self.label_8.setObjectName("label_8")

        self.line = QtWidgets.QFrame(Dialog)
        self.line.setGeometry(QtCore.QRect(1020, 150, 1000, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")


        #label 1
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(80, 50, 700, 51))
        self.label.setStyleSheet("font: 75 20pt \"Agency FB\";")
        self.label.setObjectName("label")

     

        # label 2
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(80, 950, 500, 51))
        self.label_4.setStyleSheet("font: 75 20pt \"Agency FB\";")
        self.label_4.setObjectName("label_4")

        # browser 1 + lables
        self.label_a = QtWidgets.QLabel(Dialog)
        self.label_a.setGeometry(QtCore.QRect(110, 200, 160, 50))
        self.label_a.setStyleSheet("font: 75 18pt \"Agency FB\";\n")
        self.label_a.setObjectName("label_a")

        # browser 2 + lables
        self.label_b = QtWidgets.QLabel(Dialog)
        self.label_b.setGeometry(QtCore.QRect(110, 500, 160, 50))
        self.label_b.setStyleSheet("font: 75 18pt \"Agency FB\";\n")
        self.label_b.setObjectName("label_b")
        #
      
        #
        #
        # browser 1_result + lables
        self.label_a_result = QtWidgets.QLabel(Dialog)
        self.label_a_result.setGeometry(QtCore.QRect(150, 300, 960, 50))
        self.label_a_result.setStyleSheet("font: 75 17pt ;color: rgb(255, 85, 127);\n""font-style:italic")
        self.label_a_result.setObjectName("label_a")


        # browser 2_result + lables
        self.label_b_result = QtWidgets.QLabel(Dialog)
        self.label_b_result.setGeometry(QtCore.QRect(300, 600, 960, 50))
        self.label_b_result.setStyleSheet("font: 75 17pt ;color: rgb(255, 85, 127);\n""font-style:italic")
        self.label_b_result.setObjectName("label_a")
        #
      
    
        #
        #browser 1
        self.textBrowser_4 = QtWidgets.QFrame(Dialog)
        self.textBrowser_4.setGeometry(QtCore.QRect(85, 150, 850, 670))
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.textBrowser_4.setMidLineWidth(1)  # 设置中线宽度
        self.textBrowser_4.setFrameShadow(QFrame.Plain)  # 设置阴影效果：凸起
        self.textBrowser_4.setFrameShape(QFrame.Box)
        self.textBrowser_4.setLineWidth(1)




        #file path label
        self.file_path_label = QtWidgets.QLabel(Dialog)
        self.file_path_label.setGeometry(QtCore.QRect(120, 750, 421, 51))


    

        #run button
        self.pushButton_1 = QtWidgets.QPushButton(Dialog)
        self.pushButton_1.setGeometry(QtCore.QRect(785, 950, 152, 52))
        self.pushButton_1.setStyleSheet("background-color: rgb(223, 223, 223);\n""font: 75 15pt \"Agency FB\";")
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_1.clicked.connect(self.clip_data)
        # self.calculation_finished.connect(self.action_finished)

        #progress bar
        self.progress_bar = QtWidgets.QLabel(Dialog)
        self.progress_bar.setGeometry(QtCore.QRect(80, 1112, 552, 100))
        self.progress_bar.setStyleSheet("background-color: rgb(223, 223, 223);\n""font: 75 20pt \"Agency FB\";color: red;padding-left: 170px;")
        # self.progress_bar.setProperty("value",0)
        self.progress_bar.setObjectName("progress_bar")
        # self.pushButton_1.clicked.connect(self.upload_file)




        #file path
        self.file_path_label = QtWidgets.QLabel(Dialog)
        self.file_path_label.setGeometry(QtCore.QRect(550, 900, 421, 51))

        # preview button
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(785, 1130, 152, 52))
        self.pushButton_2.setStyleSheet("background-color: rgb(109, 151, 115);\n""font: 75 15pt \"Agency FB\";""color:white")
        self.pushButton_2.setObjectName("pushButton_2")
    

        # previous button
        self.pushButton_4 = QtWidgets.QPushButton(Dialog)
        self.pushButton_4.setGeometry(QtCore.QRect(850, 1300, 152, 52))
        self.pushButton_4.setStyleSheet("background-color: rgb(12, 59, 46);\n""font: 75 20pt \"Agency FB\";""color:white;")
        self.pushButton_4.setObjectName("pushButton_4")

        # validation label
        self.label_validation = QtWidgets.QLabel(Dialog)
        self.label_validation.setGeometry(QtCore.QRect(130, 1000, 960, 50))
        self.label_validation.setStyleSheet("font: 75 15pt \"Agency FB\";")
        self.label_validation.setObjectName("label_validation")

  

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        button_object_names = ["pushButton_2", "pushButton_1", "pushButton_4"]  # Add more button object names if needed

        for button_name in button_object_names:
            # Find the button by its object name
            button = getattr(self, button_name)
            if isinstance(button, QPushButton):
                # Set default cursor shape to arrow
                button.setCursor(Qt.ArrowCursor)

                # Connect signals to slots
                button.enterEvent = lambda event, button=button: self.changeCursorToHand(button)
                button.leaveEvent = lambda event, button=button: self.changeCursorToArrow(button)


    def changeCursorToHand(self, button):
        button.setCursor(Qt.PointingHandCursor)  # Change cursor to pointing hand when mouse enters button area


    def changeCursorToArrow(self, button):
        button.setCursor(Qt.ArrowCursor)




    def upload_file(self):
        _translate = QtCore.QCoreApplication.translate
        options = QFileDialog.Options()
        file_path, _ = QFileDialog.getOpenFileName(self, "Open File", "", "All Files (*);;Text Files (*.txt)", options=options)

        if file_path:
            self.file_path_label.setText(_translate("Dialog", "File uploaded: " + file_path))

    def closeEvent(self, event):
        confirm = QMessageBox.question(
            self, "Confirm Close",
            "Are you sure you want to close the application?",
            QMessageBox.Yes | QMessageBox.No, QMessageBox.No
        )

        if confirm == QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Automatic Geomorphological Classification Tool", "Automatic Geomorphological Classification Tool"))


        self.label_a.setText(_translate("Dialog", "Application:"))
        self.label_b.setText(_translate("Dialog", "Data:"))



   
        self.textBrowser_2.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:15pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Agency FB\',\'serif\'; font-size:18pt; font-weight:600;\"><br /></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Agency FB\',\'serif\'; font-size:18pt; font-weight:600;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:50px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Agency FB\',\'serif\'; font-size:20pt; font-weight:600;\">Geo-Computation Knowledge Graph</span> </p>\n"
# "<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:-50px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Agency FB\',\'serif\'; font-size:15pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Agency FB\',\'serif\'; font-size:15pt;\">Once the selection of the application, model, and data is finished, the geo-computation is ready to be executed. The relations among application ontology, data ontology, and model ontology in geo-computation ontology are displayed below. </span> </p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:-160px;\">          <img src=\":/pic/whole.png\" width=\"940\" height=\"740\" /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Agency FB\',\'serif\'; font-size:15pt;\">The “theme” of the application decides the “application category” of models and the “content” of data, and the “temporal-spatial features” of the application correspond to the features of data. Models have input data, which set the constraints for data, while for data, special features in data can be used to parameterize the models. </span> </p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_8.setText(_translate("Dialog", "Description"))
        self.label.setText(_translate("Dialog", "Please Confirm Your Selection:"))
     
        self.label_4.setText(_translate("Dialog", "Please Execute Geo-Computation:"))
   
        self.pushButton_1.setText(_translate("Dialog", "Run"))
        self.pushButton_2.setText(_translate("Dialog", "Preview"))
        self.pushButton_4.setText(_translate("Dialog", "Previous"))
    
    def update_label_with_task(self, value):
        text = f"  {value}"
        self.label_a_result.setText(text)

  
    def update_label_with_data(self, value):
        text = f"  {value}"
        self.label_b_result.setText(text)
        self.data=value
        print("data",self.data)

    def update_label_with_coordinates(self, top_left, bottom_right):
        top_left_lat_coordinates1 = top_left.split(",")[0].split()
        lat_1 = top_left_lat_coordinates1[0]
        self.lat_1 = lat_1
        top_left_lon_coordinates1 = top_left.split(",")[1].split()
        lon_1 = top_left_lon_coordinates1[0]
        self.lon_1 = lon_1
        print("processing",lat_1, lon_1)

        top_left_lat_coordinates2 = bottom_right.split(",")[0].split()
        lat_2 = top_left_lat_coordinates2[0]
        self.lat_2 = lat_2
        top_left_lon_coordinates2 = bottom_right.split(",")[1].split()
        lon_2 = top_left_lon_coordinates2[0]
        self.lon_2 = lon_2
        print(lat_2, lon_2)


    def clip_data(self):
        ontology = "H:/SHACL/framework_geocomputation_geomorphology_test_fullname_TEST.owl"
        x_min = self.lon_1
        y_min = self.lat_2
        x_max = self.lon_2
        y_max = self.lat_1

        path = "H:/DEM/app/app_clip"
        clear_folder(path)
        output = "H:/DEM/app/app_clip/raster_clip_input.tif"
        output2= "H:/DEM/app/app_clip/watershed_clip_input.tif"
        data = knowledge_graph_data(ontology, self.data)
        data2= "H:/DEM/water_90/water_90/Watersh_Flow1.tif"
        RASTER_CLIP(data, output, x_min, y_min, x_max, y_max)
        RASTER_CLIP(data2, output2, x_min, y_min, x_max, y_max)
        _translate = QtCore.QCoreApplication.translate
        time.sleep(10)
        if os.path.exists("H:/DEM/app/app_clip/raster_clip_input.tif"):
            _translate = QtCore.QCoreApplication.translate
            self.progress_bar.setText(_translate("Dialog", "Action finished"))



import process_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_processing_page()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
