# # # -*- coding: utf-8 -*-
# #
# # # Form implementation generated from reading ui file 'D:/QT/test_map.ui'
# # #
# # # Created by: PyQt5 UI code generator 5.15.9
# # #
# # # WARNING: Any manual changes made to this file will be lost when pyuic5 is
# # # run again.  Do not edit this file unless you know what you are doing.
# #
# #
# # from PyQt5 import QtCore, QtGui, QtWidgets
# # import sys
# # from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget
# # from PyQt5.QtWebEngineWidgets import QWebEngineView
# #
# # class Ui_Form(object):
# #     def setupUi(self, Form):
# #         Form.setObjectName("Form")
# #         Form.resize(1200, 900)
# #         Form.setStyleSheet("background-color: rgb(250, 248, 232);")
# #         self.frame = QtWidgets.QFrame(Form)
# #         self.frame.setGeometry(QtCore.QRect(30, 110, 900, 700))
# #         self.frame.setStyleSheet("background-color: rgb(255, 255, 127);")
# #         self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
# #         self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
# #         self.frame.setLineWidth(9)
# #         self.frame.setObjectName("frame")
# #         self.web_view = QWebEngineView(self.frame)
# #         html_content = """
# #                <!DOCTYPE html>
# #         <html>
# #
# #         <head>
# #             <title>Data Processing Webpage</title>
# #             <link rel="stylesheet" href="styles.css">
# #             <!-- Add the necessary map API scripts and styles here -->
# #             <!-- Replace 'MAP_API_URL' with the URL of your map API -->
# #             <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=23a9a63f3a584ee405db4e1147945e1e"></script>
# #             <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100px;height:500px}input,b,p{margin-left:5px;font-size:14px}</style>
# #             <!--link href="MAP_API_URL/map-api.css" rel="stylesheet" />
# #             <style>
# #                 #map-container {
# #                     width: 1000px;
# #                     height: 800px;
# #                 }
# #             </style-->
# #         </head>
# #
# #         <body>
# #             <h1>Data Processing Webpage</h1>
# #
# #             <!-- Step 1: View Map -->
# #             <div id="step1">
# #         <!--        <h2>Step 1: View Map</h2>-->
# #         <!--        <div id="map-container">-->
# #         <!--	        <p>Map will be displayed here</p>-->
# #         	    <body onLoad="onLoad()">
# #                 <div id="mapDiv">
# #
# #                 </div>
# #         <!--        <div  >-->
# #         <!--	 <input type="button" value="开启" onClick="rectTool.open();"/>-->
# #         <!--	 <input type="button" value="清除" onClick="rectTool.clear();"/>-->
# #         <!--        <input type="button" value="关闭" onClick="rectTool.close();"/>-->
# #         <!--        <input type="button" value="get" onClick="rectTool.getRectangles();"/>-->
# #         <!--	 </div>-->
# #         <!--        </div>-->
# #         <!--        <button type="button" onclick="showStep2()">Next</button>-->
# #         <!--    </div>-->
# #
# #         <!--    &lt;!&ndash; Step 2: Select from the List &ndash;&gt;-->
# #         <!--    <div id="step2" style="display: none;">-->
# #         <!--        <h2>Step 2: Select from the List</h2>-->
# #         <!--        <select id="dropdown">-->
# #         <!--            <option value="" disabled selected>Select an option...</option>-->
# #         <!--            <option value="option1">Option 1</option>-->
# #         <!--            <option value="option2">Option 2</option>-->
# #         <!--            <option value="option3">Option 3</option>-->
# #         <!--        </select>-->
# #         <!--        <button type="button" onclick="showStep1()">Previous</button>-->
# #         <!--        <button type="button" onclick="showStep3()">Next</button>-->
# #         <!--    </div>-->
# #
# #         <!--    &lt;!&ndash; Step 3: Upload Data &ndash;&gt;-->
# #         <!--    <div id="step3" style="display: none;">-->
# #         <!--        <h2>Step 3: Upload Data</h2>-->
# #         <!--        <form id="upload-form">-->
# #         <!--            <input type="file" id="file-upload" name="data-file" accept=".csv, .txt">-->
# #         <!--            <button type="button" onclick="showStep2()">Previous</button>-->
# #         <!--            <button type="button" onclick="showStep4()">Next</button>-->
# #         <!--        </form>-->
# #         <!--    </div>-->
# #
# #         <!--    &lt;!&ndash; Step 4: Process Data &ndash;&gt;-->
# #         <!--    <div id="step4" style="display: none;">-->
# #         <!--        <h2>Step 4: Process Data</h2>-->
# #         <!--        <button type="button" onclick="showStep3()">Previous</button>-->
# #         <!--        <button type="button" onclick="executeProcess()">Process Data</button>-->
# #         <!--    </div>-->
# #
# #             <script>
# #                 // Map initialization (replace this with your map API's initialization script)
# #                 // This script will create the map using your API
# #                 // Example:
# #                var map, rectTool;;
# #                var zoom = 8;
# #                var lay;
# #                var onlyMapLay;
# #
# #                function onLoad() {
# #                             var imageURL = "http://t0.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}&tk=23a9a63f3a584ee405db4e1147945e1e";
# #                             lay = new T.TileLayer(imageURL, {minZoom: 1, maxZoom: 18});
# #                             var config = {layers: [lay]};
# #                             map = new T.Map("mapDiv", config);
# #                             map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
# #                             map.enableScrollWheelZoom();
# #                             rectTool = new T.RectangleTool(map);
# #                             getMapBounds();
# #                         }
# #                  function getMapBounds() {
# #                     var rt = rectTool.getRectangles();
# #                     var bs = rt.getLngLats();   	//获取可视区域
# #                     var bssw = bs.getSouthWest();   //可视区域左下角
# #                     var bsne = bs.getNorthEast();   //可视区域右上角
# #                     alert("当前地图可视范围是：" + bssw.getLng() + "," + bssw.getLat() + "到" + bsne.getLng() + "," + bsne.getLat());}
# #                 function showStep1() {
# #                     document.getElementById("step2").style.display = "none";
# #                     document.getElementById("step3").style.display = "none";
# #                     document.getElementById("step4").style.display = "none";
# #                     document.getElementById("step1").style.display = "block";
# #                 }
# #
# #                 function showStep2() {
# #                     document.getElementById("step1").style.display = "none";
# #                     document.getElementById("step3").style.display = "none";
# #                     document.getElementById("step4").style.display = "none";
# #                     document.getElementById("step2").style.display = "block";
# #                 }
# #
# #                 function showStep3() {
# #                     document.getElementById("step1").style.display = "none";
# #                     document.getElementById("step2").style.display = "none";
# #                     document.getElementById("step4").style.display = "none";
# #                     document.getElementById("step3").style.display = "block";
# #                 }
# #
# #                 function showStep4() {
# #                     document.getElementById("step1").style.display = "none";
# #                     document.getElementById("step2").style.display = "none";
# #                     document.getElementById("step3").style.display = "none";
# #                     document.getElementById("step4").style.display = "block";
# #                 }
# #
# #                 function executeProcess() {
# #                     // Get the uploaded file and selected option
# #                     const fileInput = document.getElementById('file-upload');
# #                     const selectedOption = document.getElementById('dropdown').value;
# #
# #                     // Perform processing (you can add your logic here)
# #                     console.log('File:', fileInput.files[0]);
# #                     console.log('Selected Option:', selectedOption);
# #
# #                     // Show a message or redirect to the processing page
# #                     alert('Data processing completed!');
# #                 }
# #
# #                 // Initialize the map when the page loads
# #                 window.onload = onLoad;
# #             </script>
# #         </body>
# #
# #         </html>
# #
# #                 """
# #         self.web_view.setHtml(html_content)
# #         self.web_view.resize(1000, 1000)
# #         self.web_view.move(40, 50)
# #         self.pushButton = QtWidgets.QPushButton(Form)
# #         self.pushButton.setGeometry(QtCore.QRect(360, 140, 75, 23))
# #         self.pushButton.setObjectName("pushButton")
# #         self.pushButton_2 = QtWidgets.QPushButton(Form)
# #         self.pushButton_2.setGeometry(QtCore.QRect(360, 190, 75, 23))
# #         self.pushButton_2.setObjectName("pushButton_2")
# #         self.pushButton_3 = QtWidgets.QPushButton(Form)
# #         self.pushButton_3.setGeometry(QtCore.QRect(360, 240, 75, 23))
# #         self.pushButton_3.setObjectName("pushButton_3")
# #
# #         self.retranslateUi(Form)
# #         QtCore.QMetaObject.connectSlotsByName(Form)
# #
# #     def retranslateUi(self, Form):
# #         _translate = QtCore.QCoreApplication.translate
# #         Form.setWindowTitle(_translate("Form", "Form"))
# #         self.pushButton.setText(_translate("Form", "PushButton"))
# #         self.pushButton_2.setText(_translate("Form", "PushButton"))
# #         self.pushButton_3.setText(_translate("Form", "PushButton"))
# #
# #
# # if __name__ == "__main__":
# #     import sys
# #     app = QtWidgets.QApplication(sys.argv)
# #     Form = QtWidgets.QWidget()
# #     ui = Ui_Form()
# #     ui.setupUi(Form)
# #     Form.show()
# #     sys.exit(app.exec_())
# #
# #
# #
#
#
#
# import sys
# from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QFileDialog
#
# class FileUploadApp(QMainWindow):
#     def __init__(self):
#         super().__init__()
#         self.setWindowTitle("File Upload Example")
#         self.setGeometry(100, 100, 400, 200)
#
#         # Create a button for file upload
#         self.upload_button = QPushButton("Upload File", self)
#         self.upload_button.setGeometry(150, 80, 100, 30)
#         self.upload_button.clicked.connect(self.upload_file)
#
#     def upload_file(self):
#         options = QFileDialog.Options()
#         file_path, _ = QFileDialog.getOpenFileName(self, "Open File", "", "All Files (*);;Text Files (*.txt)", options=options)
#
#         if file_path:
#             print("File uploaded:", file_path)
#
# def main():
#     app = QApplication(sys.argv)
#     window = FileUploadApp()
#     window.show()
#     sys.exit(app.exec_())
#
# if __name__ == "__main__":
#     main()
#
#




import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QFileDialog, QLabel

class FileUploadApp(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("File Upload Example")
        self.setGeometry(100, 100, 400, 200)

        # Create a button for file upload
        self.upload_button = QPushButton("Upload File", self)
        self.upload_button.setGeometry(150, 80, 100, 30)
        self.upload_button.clicked.connect(self.upload_file)

        # Create a label to display the file path
        self.file_path_label = QLabel(self)
        self.file_path_label.setGeometry(20, 120, 360, 30)

    def upload_file(self):
        options = QFileDialog.Options()
        file_path, _ = QFileDialog.getOpenFileName(self, "Open File", "", "All Files (*);;Text Files (*.txt)", options=options)

        if file_path:
            self.file_path_label.setText("File uploaded: " + file_path)

def main():
    app = QApplication(sys.argv)
    window = FileUploadApp()
    window.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()

